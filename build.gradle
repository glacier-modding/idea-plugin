def properties(def key) {
    return project.findProperty(key).toString()
}

plugins {
    // Java support
    id "java"
    // Gradle IntelliJ Plugin
    id "org.jetbrains.intellij" version "1.3.0"
}

group = properties("pluginGroup")
version = properties("pluginVersion")

// Configure project's dependencies
repositories {
    mavenCentral()
}

// Configure Gradle IntelliJ Plugin - read more: https://github.com/JetBrains/gradle-intellij-plugin
intellij {
    pluginName = properties("pluginName")
    version = properties("platformVersion")
    type = properties("platformType")

    plugins = []
}

def javaVersion = properties("javaVersion")

tasks.withType(JavaCompile) {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}

wrapper {
    gradleVersion = properties("gradleVersion")
}

patchPluginXml {
    version = properties("pluginVersion")
    sinceBuild = properties("pluginSinceBuild")
    untilBuild = properties("pluginUntilBuild")

    // Extract the <!-- Plugin description --> section from README.md and provide for the plugin's manifest
    pluginDescription = "Plugin that adds Peacock-specific functionality to the IDEA platform."

    changeNotes = "No change notes available."
}

signPlugin {
    certificateChain = System.getenv("CERTIFICATE_CHAIN")
    privateKey = System.getenv("PRIVATE_KEY")
    password = System.getenv("PRIVATE_KEY_PASSWORD")
}

publishPlugin {
    token = System.getenv("PUBLISH_TOKEN")
    channels = Arrays.asList("default")
}
