String properties(String key) {
    return project.findProperty(key).toString()
}

plugins {
    id "groovy"
    id "org.jetbrains.intellij" version "1.4.0"
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

group = properties("pluginGroup")
version = properties("pluginVersion")

// Configure project's dependencies
repositories {
    mavenCentral()
}

dependencies {
    runtimeClasspath group: "org.codehaus.groovy", name: "groovy", version: "2.5.15"
    runtimeClasspath group: "org.codehaus.groovy", name: "groovy-json", version: "2.5.15"
}

// Configure Gradle IntelliJ Plugin - read more: https://github.com/JetBrains/gradle-intellij-plugin
intellij {
    pluginName = properties("pluginName")
    version = properties("platformVersion")
    type = properties("platformType")

    plugins = []
}

String javaVersion = properties("javaVersion")

tasks.withType(JavaCompile) {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}

wrapper {
    gradleVersion = properties("gradleVersion")
}

patchPluginXml {
    version = properties("pluginVersion")
    sinceBuild = properties("pluginSinceBuild")
    untilBuild = properties("pluginUntilBuild")
    pluginDescription = "Plugin that adds GlacierÂ² specific functionality to the IDEA platform."
    changeNotes = "No change notes available."
}

signPlugin {
    certificateChain = System.getenv("CERTIFICATE_CHAIN")
    privateKey = System.getenv("PRIVATE_KEY")
    password = System.getenv("PRIVATE_KEY_PASSWORD")
}

publishPlugin {
    token = System.getenv("PUBLISH_TOKEN")
    channels = Arrays.asList("default")
}

jar {
    duplicatesStrategy = DuplicatesStrategy.WARN
}

shadowJar {
    minimize()
    relocate "groovy", "g2groovy"
    relocate "org.codehaus", "g2groovy.codehaus"
    relocate "org.apache", "g2groovy.apache"
}

build {
    dependsOn shadowJar
}

tasks.withType(AbstractArchiveTask) {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}
